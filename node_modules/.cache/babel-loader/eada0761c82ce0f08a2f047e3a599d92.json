{"ast":null,"code":"var _jsxFileName = \"A:\\\\React\\\\whopaythebill\\\\src\\\\context\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myContext = /*#__PURE__*/React.createContext();\n\nclass MyProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      stage: 1,\n      players: [],\n      result: \"\"\n    };\n\n    this.addPlayerHandler = name => {\n      this.setState(prevState => ({\n        players: [...prevState.players, name]\n      })); // console.log(this.state.players)\n    };\n\n    this.removePlayerHandler = index => {\n      let newArray = this.state.players;\n      newArray.splice(index, 1);\n      this.setState({\n        players: newArray\n      });\n    };\n\n    this.nextHandler = () => {\n      const {\n        players\n      } = this.state;\n      if (players.length < 2) toast.error(\"You need to add more than one players\", {\n        position: toast.POSITION.TOP_LEFT,\n        autoClose: 3000\n      });else {\n        this.setState({\n          stage: 2\n        });\n        this.setState({\n          result: \"Loading...\"\n        });\n        setTimeout(() => {\n          this.getLooserHandler();\n        }, 2000);\n      }\n    };\n\n    this.getLooserHandler = () => {\n      const {\n        players\n      } = this.state;\n      let resultIndex = Math.floor(Math.random() * players.length);\n      this.setState({\n        result: players[resultIndex]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(myContext.Provider, {\n        value: {\n          state: this.state,\n          addPlayers: this.addPlayerHandler,\n          removePlayer: this.removePlayerHandler,\n          next: this.nextHandler,\n          getlooser: this.getLooserHandler\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport { myContext, MyProvider };","map":{"version":3,"sources":["A:/React/whopaythebill/src/context/index.js"],"names":["React","Component","ToastContainer","toast","myContext","createContext","MyProvider","state","stage","players","result","addPlayerHandler","name","setState","prevState","removePlayerHandler","index","newArray","splice","nextHandler","length","error","position","POSITION","TOP_LEFT","autoClose","setTimeout","getLooserHandler","resultIndex","Math","floor","random","render","addPlayers","removePlayer","next","getlooser","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,EAAuBC,KAAvB,QAAoC,gBAApC;AACA,OAAO,uCAAP;;;AACA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,aAAN,EAAlB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADyB;;AAAA,SAOjCC,gBAPiC,GAOfC,IAAD,IAAQ;AACvB,WAAKC,QAAL,CAAgBC,SAAD,KAAc;AACrBL,QAAAA,OAAO,EAAC,CACJ,GAAGK,SAAS,CAACL,OADT,EAEJG,IAFI;AADa,OAAd,CAAf,EADuB,CAOvB;AACD,KAfgC;;AAAA,SAiBlCG,mBAjBkC,GAiBbC,KAAD,IAAS;AACzB,UAAIC,QAAQ,GAAG,KAAKV,KAAL,CAAWE,OAA1B;AACAQ,MAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAsB,CAAtB;AACA,WAAKH,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAACQ;AADE,OAAd;AAGH,KAvBiC;;AAAA,SAyBlCE,WAzBkC,GAyBtB,MAAI;AACb,YAAM;AAACV,QAAAA;AAAD,UAAY,KAAKF,KAAvB;AACA,UAAGE,OAAO,CAACW,MAAR,GAAiB,CAApB,EACIjB,KAAK,CAACkB,KAAN,CAAY,uCAAZ,EAAoD;AAChDC,QAAAA,QAAQ,EAACnB,KAAK,CAACoB,QAAN,CAAeC,QADwB;AAEhDC,QAAAA,SAAS,EAAC;AAFsC,OAApD,EADJ,KAKI;AACA,aAAKZ,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAC;AADI,SAAd;AAGA,aAAKK,QAAL,CAAc;AACVH,UAAAA,MAAM,EAAC;AADG,SAAd;AAGAgB,QAAAA,UAAU,CAAC,MAAI;AAEX,eAAKC,gBAAL;AACH,SAHS,EAGR,IAHQ,CAAV;AAIH;AAEJ,KA7CkC;;AAAA,SA+CnCA,gBA/CmC,GA+ClB,MAAI;AACjB,YAAM;AAAClB,QAAAA;AAAD,UAAY,KAAKF,KAAvB;AAGA,UAAIqB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAActB,OAAO,CAACW,MAAjC,CAAlB;AACA,WAAKP,QAAL,CAAc;AACVH,QAAAA,MAAM,EAACD,OAAO,CAACmB,WAAD;AADJ,OAAd;AAGH,KAvDkC;AAAA;;AAwDjCI,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,8BACF,QAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,EAAE;AACvBzB,UAAAA,KAAK,EAAE,KAAKA,KADW;AAEvB0B,UAAAA,UAAU,EAAC,KAAKtB,gBAFO;AAGvBuB,UAAAA,YAAY,EAAE,KAAKnB,mBAHI;AAIvBoB,UAAAA,IAAI,EAAE,KAAKhB,WAJY;AAKvBiB,UAAAA,SAAS,EAAC,KAAKT;AALQ,SAA3B;AAAA,kBASG,KAAKU,KAAL,CAAWC;AATd;AAAA;AAAA;AAAA;AAAA,cADE,eAYF,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAZE;AAAA,oBADJ;AAgBD;;AAzEgC;;AA4EnC,SACIlC,SADJ,EAEIE,UAFJ","sourcesContent":["import React, { Component } from \"react\";\r\nimport {ToastContainer,toast}  from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst myContext = React.createContext();\r\n\r\nclass MyProvider extends Component {\r\n  state = {\r\n    stage: 1,\r\n    players: [],\r\n    result: \"\",\r\n  };\r\n\r\n  addPlayerHandler=(name)=>{\r\n    this.setState( (prevState)=>({\r\n            players:[\r\n                ...prevState.players,\r\n                name\r\n            ]\r\n    }))\r\n    // console.log(this.state.players)\r\n  }\r\n\r\n removePlayerHandler=(index)=>{\r\n     let newArray = this.state.players;\r\n     newArray.splice(index,1);\r\n     this.setState({\r\n         players:newArray\r\n     })\r\n }\r\n\r\n nextHandler=()=>{\r\n    const {players} = this.state;\r\n    if(players.length < 2)\r\n        toast.error(\"You need to add more than one players\",{\r\n            position:toast.POSITION.TOP_LEFT,\r\n            autoClose:3000\r\n        })\r\n    else{\r\n        this.setState({\r\n            stage:2\r\n        })\r\n        this.setState({\r\n            result:\"Loading...\"\r\n        })\r\n        setTimeout(()=>{\r\n\r\n            this.getLooserHandler();\r\n        },2000)\r\n    }\r\n       \r\n}\r\n\r\ngetLooserHandler=()=>{\r\n    const {players} = this.state;\r\n\r\n\r\n    let resultIndex = Math.floor(Math.random()*players.length);\r\n    this.setState({\r\n        result:players[resultIndex]\r\n    })\r\n}\r\n  render() {\r\n    return (\r\n        <>\r\n      <myContext.Provider value={{\r\n          state: this.state,\r\n          addPlayers:this.addPlayerHandler,\r\n          removePlayer: this.removePlayerHandler,\r\n          next: this.nextHandler,\r\n          getlooser:this.getLooserHandler\r\n\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </myContext.Provider>\r\n      <ToastContainer/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport{\r\n    myContext,\r\n    MyProvider\r\n}"]},"metadata":{},"sourceType":"module"}