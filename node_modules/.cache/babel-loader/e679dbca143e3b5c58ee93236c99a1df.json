{"ast":null,"code":"var _jsxFileName = \"A:\\\\React\\\\whopaythebill\\\\src\\\\context\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myContext = /*#__PURE__*/React.createContext();\n\nclass MyProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      stage: 1,\n      players: [],\n      result: \"\"\n    };\n\n    this.addPlayerHandler = name => {\n      this.setState(prevState => ({\n        players: [...prevState.players, name]\n      })); // console.log(this.state.players)\n    };\n\n    this.removePlayerHandler = index => {\n      let newArray = this.state.players;\n      newArray.splice(index, 1);\n      this.setState({\n        players: newArray\n      });\n    };\n\n    this.nextHandler = () => {\n      const {\n        players\n      } = this.state;\n      if (players.length < 2) toast.error(\"You need to add more than one players\", {\n        position: toast.POSITION.TOP_LEFT,\n        autoClose: 3000\n      });else {\n        this.setState({\n          stage: 2\n        });\n        this.getLooserHandler();\n      }\n    };\n\n    this.getLooserHandler = () => {\n      const {\n        players\n      } = this.state;\n      let resultIndex = Math.floor(Math.random() * players.length);\n      this.setState({\n        result: \"Loading...\"\n      });\n      setTimeout(() => {\n        this.setState({\n          result: players[resultIndex]\n        });\n      }, 2000);\n    };\n\n    this.resetHandler = () => {\n      this.setState({\n        stage: 1,\n        players: [],\n        result: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(myContext.Provider, {\n        value: {\n          state: this.state,\n          addPlayers: this.addPlayerHandler,\n          removePlayer: this.removePlayerHandler,\n          next: this.nextHandler,\n          getlooser: this.getLooserHandler,\n          reset: this.resetHandler\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport { myContext, MyProvider };","map":{"version":3,"sources":["A:/React/whopaythebill/src/context/index.js"],"names":["React","Component","ToastContainer","toast","myContext","createContext","MyProvider","state","stage","players","result","addPlayerHandler","name","setState","prevState","removePlayerHandler","index","newArray","splice","nextHandler","length","error","position","POSITION","TOP_LEFT","autoClose","getLooserHandler","resultIndex","Math","floor","random","setTimeout","resetHandler","render","addPlayers","removePlayer","next","getlooser","reset","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AACA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,aAAN,EAAlB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADyB;;AAAA,SAOjCC,gBAPiC,GAObC,IAAD,IAAU;AAC3B,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BL,QAAAA,OAAO,EAAE,CAAC,GAAGK,SAAS,CAACL,OAAd,EAAuBG,IAAvB;AADmB,OAAhB,CAAd,EAD2B,CAI3B;AACD,KAZgC;;AAAA,SAcjCG,mBAdiC,GAcVC,KAAD,IAAW;AAC/B,UAAIC,QAAQ,GAAG,KAAKV,KAAL,CAAWE,OAA1B;AACAQ,MAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACA,WAAKH,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAEQ;AADG,OAAd;AAGD,KApBgC;;AAAA,SAsBjCE,WAtBiC,GAsBnB,MAAM;AAClB,YAAM;AAAEV,QAAAA;AAAF,UAAc,KAAKF,KAAzB;AACA,UAAIE,OAAO,CAACW,MAAR,GAAiB,CAArB,EACEjB,KAAK,CAACkB,KAAN,CAAY,uCAAZ,EAAqD;AACnDC,QAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC,QAD0B;AAEnDC,QAAAA,SAAS,EAAE;AAFwC,OAArD,EADF,KAKK;AACH,aAAKZ,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAE;AADK,SAAd;AAGE,aAAKkB,gBAAL;AACH;AACF,KAnCgC;;AAAA,SAqCjCA,gBArCiC,GAqCd,MAAM;AACvB,YAAM;AAAEjB,QAAAA;AAAF,UAAc,KAAKF,KAAzB;AAEA,UAAIoB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,OAAO,CAACW,MAAnC,CAAlB;AACA,WAAKP,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAE;AADE,OAAd;AAGAqB,MAAAA,UAAU,CAAC,MAAI;AACX,aAAKlB,QAAL,CAAc;AACVH,UAAAA,MAAM,EAAED,OAAO,CAACkB,WAAD;AADL,SAAd;AAGH,OAJS,EAIR,IAJQ,CAAV;AAMD,KAlDgC;;AAAA,SAoDjCK,YApDiC,GAoDpB,MAAI;AACb,WAAKnB,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAC,CADI;AAEVC,QAAAA,OAAO,EAAC,EAFE;AAGVC,QAAAA,MAAM,EAAC;AAHG,OAAd;AAKH,KA1DgC;AAAA;;AA2DjCuB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD,CAAW,QAAX;AACE,QAAA,KAAK,EAAE;AACL1B,UAAAA,KAAK,EAAE,KAAKA,KADP;AAEL2B,UAAAA,UAAU,EAAE,KAAKvB,gBAFZ;AAGLwB,UAAAA,YAAY,EAAE,KAAKpB,mBAHd;AAILqB,UAAAA,IAAI,EAAE,KAAKjB,WAJN;AAKLkB,UAAAA,SAAS,EAAE,KAAKX,gBALX;AAMLY,UAAAA,KAAK,EAAC,KAAKN;AANN,SADT;AAAA,kBAUG,KAAKO,KAAL,CAAWC;AAVd;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAiBD;;AA7EgC;;AAgFnC,SAASpC,SAAT,EAAoBE,UAApB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst myContext = React.createContext();\r\n\r\nclass MyProvider extends Component {\r\n  state = {\r\n    stage: 1,\r\n    players: [],\r\n    result: \"\",\r\n  };\r\n\r\n  addPlayerHandler = (name) => {\r\n    this.setState((prevState) => ({\r\n      players: [...prevState.players, name],\r\n    }));\r\n    // console.log(this.state.players)\r\n  };\r\n\r\n  removePlayerHandler = (index) => {\r\n    let newArray = this.state.players;\r\n    newArray.splice(index, 1);\r\n    this.setState({\r\n      players: newArray,\r\n    });\r\n  };\r\n\r\n  nextHandler = () => {\r\n    const { players } = this.state;\r\n    if (players.length < 2)\r\n      toast.error(\"You need to add more than one players\", {\r\n        position: toast.POSITION.TOP_LEFT,\r\n        autoClose: 3000,\r\n      });\r\n    else {\r\n      this.setState({\r\n        stage: 2,\r\n      });\r\n        this.getLooserHandler();\r\n    }\r\n  };\r\n\r\n  getLooserHandler = () => {\r\n    const { players } = this.state;\r\n   \r\n    let resultIndex = Math.floor(Math.random() * players.length);\r\n    this.setState({\r\n        result: \"Loading...\",\r\n      });\r\n    setTimeout(()=>{\r\n        this.setState({\r\n            result: players[resultIndex],\r\n          });\r\n    },2000)\r\n   \r\n  };\r\n\r\n  resetHandler=()=>{\r\n      this.setState({\r\n          stage:1,\r\n          players:[],\r\n          result:''\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <myContext.Provider\r\n          value={{\r\n            state: this.state,\r\n            addPlayers: this.addPlayerHandler,\r\n            removePlayer: this.removePlayerHandler,\r\n            next: this.nextHandler,\r\n            getlooser: this.getLooserHandler,\r\n            reset:this.resetHandler\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </myContext.Provider>\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { myContext, MyProvider };\r\n"]},"metadata":{},"sourceType":"module"}