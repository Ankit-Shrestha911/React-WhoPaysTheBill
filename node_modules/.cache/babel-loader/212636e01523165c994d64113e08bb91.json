{"ast":null,"code":"var _jsxFileName = \"A:\\\\React\\\\whopaythebill\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    initialCount\n  } = _ref;\n  const [state, setState] = useState({\n    count: initialCount\n  });\n\n  const incrementHandler = () => {\n    setState({\n      count: state.count + 1\n    });\n  };\n\n  const reset = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementHandler,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Uzr757y9Fype57BkmXalobsQO9E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["A:/React/whopaythebill/src/App.js"],"names":["react","useState","App","initialCount","state","setState","count","incrementHandler","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,MAAMC,GAAG,GAAC,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAE3B,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAChCK,IAAAA,KAAK,EAACH;AAD0B,GAAD,CAAjC;;AAIA,QAAMI,gBAAgB,GAAC,MAAI;AACvBF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,KAAK,EAACF,KAAK,CAACE,KAAN,GAAY;AAAnB,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,KAAK,GAAC,MAAI,CAEf,CAFD;;AAIA,sBACE;AAAA,4BACA;AAAA,4BAAYJ,KAAK,CAACE,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAOD,CArBD;;GAAMN,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import react,{useState} from \"react\";\n\nconst App=({initialCount})=> {\n\n  const[state ,setState] = useState({\n    count:initialCount\n  })\n\n  const incrementHandler=()=>{\n      setState({count:state.count+1})\n  }\n\n  const reset=()=>{\n    \n  }\n\n  return (\n    <>\n    <h1>Count: {state.count}</h1>\n    <button onClick={incrementHandler}>Increment</button>\n    <button onClick={reset}>Reset Me</button>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}